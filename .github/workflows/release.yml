name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name: [
            linux,
            windows,
            macos
        ]

        include:
          - name: linux
            os: ubuntu-latest
            artifact_name: http-server
            asset_name: http-server-linux
            asset_extension: .tar.gz

          - name: windows
            os: windows-latest
            artifact_name: http-server.exe
            asset_name: http-server-windows
            asset_extension: .zip

          - name: macos
            os: macos-latest
            artifact_name: http-server
            asset_name: http-server-macos
            asset_extension: .tar.gz

    steps:
    - uses: actions/checkout@v1

    - name: Set env
      run: |
          echo RELEASE_VERSION=$(echo ${GITHUB_REF:10}) >> $GITHUB_ENV
          echo name=ASSET_NAME::http-server-$RELEASE_VERSION$ >> $GITHUB_ENV
      shell: bash

    - name: cargo build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --locked

    - name: Archive Release
      shell: bash
      run: |
        cp target/release/main http-server
        tar czf "${{ env.ASSET_NAME }}" "${{ env.RELEASE_VERSION }}"

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ env.ASSET_NAME }}
        asset_name: ${{ env.ASSET_NAME }}
        tag: ${{ github.ref }}

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ''
          draft: false
          prerelease: false

  publish-crate:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - run: cargo login ${CRATES_IO_TOKEN}
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

      - name: publish crate
        run: cargo publish
